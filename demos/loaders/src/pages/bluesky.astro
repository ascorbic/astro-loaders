---
import { getCollection, render } from "astro:content";
import { AppBskyEmbedImages, AppBskyEmbedRecordWithMedia } from "@atproto/api";

const posts = await getCollection("bluesky");
---

<html lang="en">
  <head>
    <meta charset="utf-8" />
    <title>Bluesky</title>
  </head>
  <body>
    <h1>Bluesky</h1>
    {
      posts.map(async (post) => {
        const { Content } = await render(post);
        const { embed } = post.data;
        return (
          <section>
            <Content />
            <p>{post.data.likeCount} likes</p>

            <div>
              {AppBskyEmbedImages.isView(embed)
                ? embed?.images.map(
                    (image) =>
                      image && <img src={image.thumb} alt={image.alt} />
                  )
                : undefined}
              {AppBskyEmbedRecordWithMedia.isView(embed) &&
              embed.media.external.uri ? (
                <img
                  src={embed.media.external.uri}
                  alt={embed.media.external.description}
                />
              ) : undefined}
            </div>
          </section>
        );
      })
    }
    <style>
      * {
        font-family:
          system-ui,
          -apple-system,
          BlinkMacSystemFont,
          "Segoe UI",
          Roboto,
          Oxygen,
          Ubuntu,
          Cantarell,
          "Open Sans",
          "Helvetica Neue",
          sans-serif;
      }
      section {
        background-color: white;
        box-shadow: 0 0 1rem rgba(0, 0, 0, 0.4);
        margin: 1rem 0;
        padding: 1rem;
      }
    </style>
  </body>
</html>
