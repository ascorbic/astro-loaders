---
import { getLiveEntry } from "astro:content";
import { BlueskyPost } from "@astro-community/astro-embed-bluesky";
import Layout from "../../layouts/Layout.astro";

const id = decodeURIComponent(Astro.params.id || "");

if (!id) {
  return Astro.redirect("/live-bluesky");
}

const { entry: post, error } = await getLiveEntry("liveBluesky", id);

if (error) {
  console.error(`Failed to load live Bluesky post ${id}:`, error.message);
}

if (!post && !error) {
  Astro.response.status = 404;
}

export const prerender = false; // Required for live content
---

<Layout
  title={`Live Bluesky Post - ${post?.data.author.displayName || "Unknown"}`}
>
  <main>
    <nav class="breadcrumb">
      <a href="/live-bluesky">‚Üê Back to Live Bluesky Posts</a>
    </nav>

    {
      error ? (
        <div class="error">
          <h1>Error Loading Post</h1>
          <p>{error.message}</p>
          <p class="error-details">
            The post might have been deleted, or there might be network issues.
          </p>
          <a href="/live-bluesky" class="back-link">
            Go back to all posts
          </a>
        </div>
      ) : post ? (
        <article class="post-detail">
          <header class="post-header">
            <h1>ü¶ã Live Bluesky Post</h1>
            <div class="author-info">
              <img
                src={post.data.author.avatar || "/default-avatar.png"}
                alt={`${post.data.author.displayName}'s avatar`}
                class="author-avatar"
                onerror="this.src='/default-avatar.png'"
              />
              <div class="author-details">
                <h2 class="author-name">{post.data.author.displayName}</h2>
                <p class="author-handle">@{post.data.author.handle}</p>
              </div>
            </div>
          </header>

          <div class="post-content">
            <BlueskyPost post={post.data} />
          </div>

          <div class="post-metadata">
            <div class="engagement-stats">
              <div class="stat">
                <span class="stat-icon">‚ù§Ô∏è</span>
                <span class="stat-value">{post.data.likeCount}</span>
                <span class="stat-label">Likes</span>
              </div>
              <div class="stat">
                <span class="stat-icon">üîÑ</span>
                <span class="stat-value">{post.data.repostCount}</span>
                <span class="stat-label">Reposts</span>
              </div>
              <div class="stat">
                <span class="stat-icon">üí¨</span>
                <span class="stat-value">{post.data.replyCount}</span>
                <span class="stat-label">Replies</span>
              </div>
              {post.data.quoteCount > 0 && (
                <div class="stat">
                  <span class="stat-icon">üìù</span>
                  <span class="stat-value">{post.data.quoteCount}</span>
                  <span class="stat-label">Quotes</span>
                </div>
              )}
            </div>

            <div class="timestamps">
              <div class="timestamp">
                <strong>Created:</strong>
                <time datetime={post.data.record.createdAt}>
                  {new Date(post.data.record.createdAt).toLocaleString(
                    "en-US",
                    {
                      year: "numeric",
                      month: "long",
                      day: "numeric",
                      hour: "2-digit",
                      minute: "2-digit",
                      timeZoneName: "short",
                    }
                  )}
                </time>
              </div>
              <div class="timestamp">
                <strong>Indexed:</strong>
                <time datetime={post.data.indexedAt}>
                  {new Date(post.data.indexedAt).toLocaleString("en-US", {
                    year: "numeric",
                    month: "long",
                    day: "numeric",
                    hour: "2-digit",
                    minute: "2-digit",
                    timeZoneName: "short",
                  })}
                </time>
              </div>
            </div>

            <div class="technical-details">
              <h3>Technical Details</h3>
              <div class="tech-grid">
                <div class="tech-item">
                  <strong>Post URI:</strong>
                  <code class="uri">{post.data.uri}</code>
                </div>
                <div class="tech-item">
                  <strong>Content ID:</strong>
                  <code>{post.data.cid}</code>
                </div>
                <div class="tech-item">
                  <strong>Author DID:</strong>
                  <code>{post.data.author.did}</code>
                </div>
                {post.data.record.langs && (
                  <div class="tech-item">
                    <strong>Languages:</strong>
                    <code>{post.data.record.langs.join(", ")}</code>
                  </div>
                )}
              </div>
            </div>

            <div class="live-info">
              <h3>Live Collection Info</h3>
              <p>
                This post was fetched in real-time using the live Bluesky
                loader. The data is fresh and reflects the current state on
                Bluesky.
              </p>
              <p>
                <a
                  href={`https://bsky.app/profile/${post.data.author.did}/post/${post.data.uri.split("/").pop()}`}
                  target="_blank"
                  rel="noopener noreferrer"
                  class="external-link"
                >
                  View on Bluesky ‚Üó
                </a>
              </p>
            </div>
          </div>
        </article>
      ) : null
    }
  </main>
</Layout>

<style>
  main {
    margin: auto;
    padding: 1rem;
    width: 800px;
    max-width: calc(100% - 2rem);
    color: #1f2937;
    font-size: 16px;
    line-height: 1.6;
    background: white;
    border-radius: 12px;
    box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1);
  }

  .breadcrumb {
    margin-bottom: 2rem;
  }

  .breadcrumb a {
    color: #3b82f6;
    text-decoration: none;
    font-weight: 500;
    display: inline-flex;
    align-items: center;
    gap: 0.5rem;
  }

  .breadcrumb a:hover {
    text-decoration: underline;
  }

  .error {
    text-align: center;
    background: #fef2f2;
    border: 1px solid #fca5a5;
    color: #991b1b;
    padding: 2rem;
    border-radius: 8px;
    margin: 2rem 0;
  }

  .error h1 {
    color: #7f1d1d;
    margin-bottom: 1rem;
  }

  .error-details {
    font-size: 0.9rem;
    color: #b91c1c;
    margin: 1rem 0;
  }

  .back-link {
    display: inline-block;
    margin-top: 1rem;
    background: #3b82f6;
    color: white;
    padding: 0.5rem 1rem;
    border-radius: 6px;
    text-decoration: none;
    font-weight: 500;
  }

  .back-link:hover {
    background: #2563eb;
  }

  .post-detail {
    background: #f8fafc;
    border-radius: 12px;
    overflow: hidden;
    border: 1px solid #e2e8f0;
  }

  .post-header {
    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    color: white;
    padding: 2rem;
    text-align: center;
  }

  .post-header h1 {
    margin: 0 0 1rem 0;
    font-size: 2.5rem;
    font-weight: 700;
  }

  .author-info {
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 1rem;
  }

  .author-avatar {
    width: 60px;
    height: 60px;
    border-radius: 50%;
    border: 3px solid white;
    object-fit: cover;
  }

  .author-details {
    text-align: left;
  }

  .author-name {
    margin: 0;
    font-size: 1.2rem;
    font-weight: 600;
  }

  .author-handle {
    margin: 0;
    opacity: 0.9;
    font-size: 0.9rem;
  }

  .post-content {
    padding: 2rem;
    background: white;
    border-bottom: 1px solid #e2e8f0;
  }

  .post-metadata {
    padding: 2rem;
    background: #f8fafc;
  }

  .engagement-stats {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(120px, 1fr));
    gap: 1rem;
    margin-bottom: 2rem;
  }

  .stat {
    display: flex;
    flex-direction: column;
    align-items: center;
    background: white;
    padding: 1rem;
    border-radius: 8px;
    border: 1px solid #e2e8f0;
  }

  .stat-icon {
    font-size: 1.5rem;
    margin-bottom: 0.5rem;
  }

  .stat-value {
    font-size: 1.25rem;
    font-weight: 700;
    color: #1f2937;
  }

  .stat-label {
    font-size: 0.8rem;
    color: #6b7280;
    text-transform: uppercase;
    letter-spacing: 0.05em;
  }

  .timestamps {
    background: white;
    padding: 1.5rem;
    border-radius: 8px;
    border: 1px solid #e2e8f0;
    margin-bottom: 2rem;
  }

  .timestamp {
    margin-bottom: 0.5rem;
    font-size: 0.9rem;
  }

  .timestamp:last-child {
    margin-bottom: 0;
  }

  .technical-details {
    background: #f1f5f9;
    padding: 1.5rem;
    border-radius: 8px;
    border: 1px solid #cbd5e1;
    margin-bottom: 2rem;
  }

  .technical-details h3 {
    margin: 0 0 1rem 0;
    color: #334155;
    font-size: 1.1rem;
  }

  .tech-grid {
    display: flex;
    flex-direction: column;
    gap: 0.75rem;
  }

  .tech-item {
    display: flex;
    flex-direction: column;
    gap: 0.25rem;
  }

  .tech-item strong {
    font-size: 0.85rem;
    color: #475569;
    text-transform: uppercase;
    letter-spacing: 0.05em;
  }

  .tech-item code {
    background: white;
    padding: 0.5rem;
    border-radius: 4px;
    font-family: "Courier New", monospace;
    font-size: 0.8rem;
    color: #1e293b;
    border: 1px solid #e2e8f0;
    word-break: break-all;
  }

  .uri {
    font-size: 0.75rem !important;
  }

  .live-info {
    background: #ecfdf5;
    border: 1px solid #bbf7d0;
    padding: 1.5rem;
    border-radius: 8px;
  }

  .live-info h3 {
    margin: 0 0 0.75rem 0;
    color: #166534;
  }

  .live-info p {
    margin: 0 0 0.75rem 0;
    color: #166534;
    font-size: 0.9rem;
  }

  .live-info p:last-child {
    margin-bottom: 0;
  }

  .external-link {
    color: #059669;
    text-decoration: none;
    font-weight: 500;
  }

  .external-link:hover {
    text-decoration: underline;
  }

  @media (max-width: 768px) {
    main {
      width: 100%;
      margin: 0;
      border-radius: 0;
    }

    .post-header {
      padding: 1.5rem;
    }

    .post-header h1 {
      font-size: 2rem;
    }

    .author-info {
      flex-direction: column;
      text-align: center;
    }

    .author-details {
      text-align: center;
    }

    .engagement-stats {
      grid-template-columns: repeat(2, 1fr);
    }

    .post-content,
    .post-metadata {
      padding: 1.5rem;
    }
  }
</style>
